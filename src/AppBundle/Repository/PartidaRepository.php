<?php

namespace AppBundle\Repository;
use AppBundle\Entity\Ficha;
use AppBundle\Entity\Jugador;
use AppBundle\Entity\Partida;

/**
 * PartidaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PartidaRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Obtiene el posible ganador de una Partida recorriendo el Tablero por filas, columnas y diagonales.
     *
     * @param Partida $partida
     * @param [][] $matrizFichas
     * @return Jugador || null
     */
    public function obtenerGanador(Partida $partida, $matrizFichas)
    {
        $tablero = $partida->getTablero();
        $filasTablero = $tablero->getNumFilas();
        $columnasTablero = $tablero->getNumColumnas();

        $jugadorGanador = null;

        $rayaDiagonalSuperior = $rayaDiagonalInferior = false;

        //Comprobación por filas
        for ($i = 0; $i < $filasTablero; $i++) { //Recorremos el Tablero por filas
            //La primera ficha, en caso de raya, nos dirá los datos del resto...
            /* @var Ficha $fichaAux */
            $fichaAux = $matrizFichas[$i][0];

            if ($fichaAux) { //Comprobamos el resto si hay ficha puesta y si no se ha encontrado 3 en raya todavía
                $rayaFilas = true;
                $tipoFichaAux = ($fichaAux) ? $fichaAux->getTipo()->getSimbolo() : null;

                //Posible Jugador ganador
                $jugadorGanador = $fichaAux->getJugador();

                for ($j = 1; $j < $columnasTablero; $j++) { //Recorremos el resto de columnas de cada fila del Tablero
                    /* @var Ficha $ficha */
                    $ficha = $matrizFichas[$i][$j];
                    $tipoFicha = ($ficha) ? $ficha->getTipo()->getSimbolo() : null;

                    if ($tipoFichaAux !== $tipoFicha) { //Controlamos que la fila esté completa
                        //Las dos fichas contiguas no coinciden
                        $rayaFilas = false;
                        //Pasamos a la siguiente fila
                        break;
                    }
                }

                //Si al acabar de recorrer la fila $i hay 3 en raya, no es necesario recorrer/comprobar el resto de filas
                if ($rayaFilas)
                    return $jugadorGanador;
            }
        }

        //Comprobación por columnas
        for ($j = 0; $j < $columnasTablero; $j++) { //Recorremos el Tablero por columnas
            //La primera ficha, en caso de raya, nos dirá los datos del resto...
            /* @var Ficha $fichaAux */
            $fichaAux = $matrizFichas[0][$j];

            if ($fichaAux) { //Comprobamos el resto si hay ficha puesta y si no se ha encontrado raya todavía
                $rayaColumnas = true;

                $tipoFichaAux = ($fichaAux) ? $fichaAux->getTipo()->getSimbolo() : null;
                //Posible Jugador ganador
                $jugadorGanador = $fichaAux->getJugador();

                for ($i = 1; $i < $filasTablero; $i++) { //Recorremos el resto de filas de cada columna del Tablero
                    /* @var Ficha $ficha */
                    $ficha = $matrizFichas[$i][$j];
                    $tipoFicha = ($ficha) ? $ficha->getTipo()->getSimbolo() : null;

                    if ($tipoFichaAux !== $tipoFicha) { //Controlamos que la columna esté completa
                        //Las dos fichas contiguas no coinciden
                        $rayaColumnas = false;
                        //Pasamos a la siguiente columna
                        break;
                    }
                }

                //Si al acabar de recorrer la columna $j hay 3 en raya, no es necesario recorrer/comprobar el resto de columnas
                if ($rayaColumnas)
                    return $jugadorGanador;
            }
        }

        //Diagonal superior
        //La primera ficha, en caso de raya, nos dirá los datos del resto...
        /* @var Ficha $fichaAux */
        $fichaAux = $matrizFichas[0][0];

        if ($fichaAux) { //Si hay Ficha puesta al inicio de la diagonal, comprobamos el resto
            $rayaDiagonalSuperior = true;

            $tipoFichaAux = ($fichaAux) ? $fichaAux->getTipo()->getSimbolo() : null;
            //Posible Jugador ganador
            $jugadorGanador = $fichaAux->getJugador();

            for ($i = $j = 1; $i < $columnasTablero; $i++) { //Recorremos la diagonal desde arriba hacia abajo
                /* @var Ficha $ficha */
                $ficha = $matrizFichas[$i][$j];
                $tipoFicha = ($ficha) ? $ficha->getTipo()->getSimbolo() : null;

                if ($tipoFichaAux !== $tipoFicha) { //Controlamos que la fila esté completa
                    //Las dos fichas contiguas no coinciden
                    $rayaDiagonalSuperior = false;
                    //Pasamos a la siguiente fila
                    break;
                }

                $j++;
            }
        }

        if ($rayaDiagonalSuperior)
            return $jugadorGanador;

        //Diagonal inferior
        //La primera ficha, en caso de raya, nos dirá los datos del resto...
        $i = $filasTablero - 1;
        /* @var Ficha $fichaAux */
        $fichaAux = $matrizFichas[$i][0];

        if ($fichaAux) { //Si hay Ficha puesta al inicio de la diagonal, comprobamos el resto
            $rayaDiagonalInferior = true;

            $tipoFichaAux = ($fichaAux) ? $fichaAux->getTipo()->getSimbolo() : null;
            //Posible Jugador ganador
            $jugadorGanador = $fichaAux->getJugador();

            for ($j = 1; $j < $columnasTablero; $j++) { //Recorremos la diagonal desde abajo hacia arriba
                $i--;
                /* @var Ficha $ficha */
                $ficha = $matrizFichas[$i][$j];
                $tipoFicha = ($ficha) ? $ficha->getTipo()->getSimbolo() : null;

                if ($tipoFichaAux !== $tipoFicha) { //Controlamos que la fila esté completa
                    //Las dos fichas contiguas no coinciden
                    $rayaDiagonalInferior = false;
                    //Pasamos a la siguiente fila
                    break;
                }
            }
        }

        if ($rayaDiagonalInferior)
            return $jugadorGanador;
    }
}
